GAS LISTING /tmp/ccA5ofNs.s 			page 1


   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.stabs	"/home/pedro/RTOS/Lista-1/",100,0,2,.Ltext0
   8               		.stabs	"main.c",100,0,2,.Ltext0
   9               		.text
  10               	.Ltext0:
  11               		.stabs	"gcc2_compiled.",60,0,0,0
  12               		.stabs	"int:t(0,1)=r(0,1);-32768;32767;",128,0,0,0
  13               		.stabs	"char:t(0,2)=@s8;r(0,2);0;255;",128,0,0,0
  14               		.stabs	"long int:t(0,3)=@s32;r(0,3);020000000000;017777777777;",128,0,0,0
  15               		.stabs	"unsigned int:t(0,4)=r(0,4);0;0177777;",128,0,0,0
  16               		.stabs	"long unsigned int:t(0,5)=@s32;r(0,5);0;037777777777;",128,0,0,0
  17               		.stabs	"__int128:t(0,6)=@s128;r(0,6);02000000000000000000000000000000000000000000;0177777777777777
  18               		.stabs	"__int128 unsigned:t(0,7)=@s128;r(0,7);0;03777777777777777777777777777777777777777777;",128
  19               		.stabs	"long long int:t(0,8)=@s64;r(0,8);01000000000000000000000;00777777777777777777777;",128,0,0
  20               		.stabs	"long long unsigned int:t(0,9)=@s64;r(0,9);0;01777777777777777777777;",128,0,0,0
  21               		.stabs	"short int:t(0,10)=r(0,10);-32768;32767;",128,0,0,0
  22               		.stabs	"short unsigned int:t(0,11)=r(0,11);0;0177777;",128,0,0,0
  23               		.stabs	"signed char:t(0,12)=@s8;r(0,12);-128;127;",128,0,0,0
  24               		.stabs	"unsigned char:t(0,13)=@s8;r(0,13);0;255;",128,0,0,0
  25               		.stabs	"float:t(0,14)=r(0,1);4;0;",128,0,0,0
  26               		.stabs	"double:t(0,15)=r(0,1);4;0;",128,0,0,0
  27               		.stabs	"long double:t(0,16)=r(0,1);4;0;",128,0,0,0
  28               		.stabs	"_Float32:t(0,17)=r(0,1);4;0;",128,0,0,0
  29               		.stabs	"short _Fract:t(0,18)=r(0,1);1;0;",128,0,0,0
  30               		.stabs	"_Fract:t(0,19)=r(0,1);2;0;",128,0,0,0
  31               		.stabs	"long _Fract:t(0,20)=r(0,1);4;0;",128,0,0,0
  32               		.stabs	"long long _Fract:t(0,21)=r(0,1);8;0;",128,0,0,0
  33               		.stabs	"unsigned short _Fract:t(0,22)=r(0,1);1;0;",128,0,0,0
  34               		.stabs	"unsigned _Fract:t(0,23)=r(0,1);2;0;",128,0,0,0
  35               		.stabs	"unsigned long _Fract:t(0,24)=r(0,1);4;0;",128,0,0,0
  36               		.stabs	"unsigned long long _Fract:t(0,25)=r(0,1);8;0;",128,0,0,0
  37               		.stabs	"_Sat short _Fract:t(0,26)=r(0,1);1;0;",128,0,0,0
  38               		.stabs	"_Sat _Fract:t(0,27)=r(0,1);2;0;",128,0,0,0
  39               		.stabs	"_Sat long _Fract:t(0,28)=r(0,1);4;0;",128,0,0,0
  40               		.stabs	"_Sat long long _Fract:t(0,29)=r(0,1);8;0;",128,0,0,0
  41               		.stabs	"_Sat unsigned short _Fract:t(0,30)=r(0,1);1;0;",128,0,0,0
  42               		.stabs	"_Sat unsigned _Fract:t(0,31)=r(0,1);2;0;",128,0,0,0
  43               		.stabs	"_Sat unsigned long _Fract:t(0,32)=r(0,1);4;0;",128,0,0,0
  44               		.stabs	"_Sat unsigned long long _Fract:t(0,33)=r(0,1);8;0;",128,0,0,0
  45               		.stabs	"short _Accum:t(0,34)=r(0,1);2;0;",128,0,0,0
  46               		.stabs	"_Accum:t(0,35)=r(0,1);4;0;",128,0,0,0
  47               		.stabs	"long _Accum:t(0,36)=r(0,1);8;0;",128,0,0,0
  48               		.stabs	"long long _Accum:t(0,37)=r(0,1);8;0;",128,0,0,0
  49               		.stabs	"unsigned short _Accum:t(0,38)=r(0,1);2;0;",128,0,0,0
  50               		.stabs	"unsigned _Accum:t(0,39)=r(0,1);4;0;",128,0,0,0
  51               		.stabs	"unsigned long _Accum:t(0,40)=r(0,1);8;0;",128,0,0,0
  52               		.stabs	"unsigned long long _Accum:t(0,41)=r(0,1);8;0;",128,0,0,0
  53               		.stabs	"_Sat short _Accum:t(0,42)=r(0,1);2;0;",128,0,0,0
  54               		.stabs	"_Sat _Accum:t(0,43)=r(0,1);4;0;",128,0,0,0
  55               		.stabs	"_Sat long _Accum:t(0,44)=r(0,1);8;0;",128,0,0,0
  56               		.stabs	"_Sat long long _Accum:t(0,45)=r(0,1);8;0;",128,0,0,0
  57               		.stabs	"_Sat unsigned short _Accum:t(0,46)=r(0,1);2;0;",128,0,0,0
GAS LISTING /tmp/ccA5ofNs.s 			page 2


  58               		.stabs	"_Sat unsigned _Accum:t(0,47)=r(0,1);4;0;",128,0,0,0
  59               		.stabs	"_Sat unsigned long _Accum:t(0,48)=r(0,1);8;0;",128,0,0,0
  60               		.stabs	"_Sat unsigned long long _Accum:t(0,49)=r(0,1);8;0;",128,0,0,0
  61               		.stabs	"void:t(0,50)=(0,50)",128,0,0,0
  62               		.stabs	"/usr/lib/avr/include/avr/io.h",130,0,0,0
  63               		.stabs	"/usr/lib/avr/include/avr/sfr_defs.h",130,0,0,0
  64               		.stabs	"/usr/lib/avr/include/inttypes.h",130,0,0,0
  65               		.stabs	"/usr/lib/gcc/avr/7.3.0/include/stdint.h",130,0,0,0
  66               		.stabs	"/usr/lib/avr/include/stdint.h",130,0,0,0
  67               		.stabs	"int8_t:t(5,1)=(0,12)",128,0,125,0
  68               		.stabs	"uint8_t:t(5,2)=(0,13)",128,0,126,0
  69               		.stabs	"int16_t:t(5,3)=(0,1)",128,0,127,0
  70               		.stabs	"uint16_t:t(5,4)=(0,4)",128,0,128,0
  71               		.stabs	"int32_t:t(5,5)=(0,3)",128,0,129,0
  72               		.stabs	"uint32_t:t(5,6)=(0,5)",128,0,130,0
  73               		.stabs	"int64_t:t(5,7)=(0,8)",128,0,132,0
  74               		.stabs	"uint64_t:t(5,8)=(0,9)",128,0,133,0
  75               		.stabs	"intptr_t:t(5,9)=(5,3)",128,0,146,0
  76               		.stabs	"uintptr_t:t(5,10)=(5,4)",128,0,151,0
  77               		.stabs	"int_least8_t:t(5,11)=(5,1)",128,0,163,0
  78               		.stabs	"uint_least8_t:t(5,12)=(5,2)",128,0,168,0
  79               		.stabs	"int_least16_t:t(5,13)=(5,3)",128,0,173,0
  80               		.stabs	"uint_least16_t:t(5,14)=(5,4)",128,0,178,0
  81               		.stabs	"int_least32_t:t(5,15)=(5,5)",128,0,183,0
  82               		.stabs	"uint_least32_t:t(5,16)=(5,6)",128,0,188,0
  83               		.stabs	"int_least64_t:t(5,17)=(5,7)",128,0,196,0
  84               		.stabs	"uint_least64_t:t(5,18)=(5,8)",128,0,203,0
  85               		.stabs	"int_fast8_t:t(5,19)=(5,1)",128,0,217,0
  86               		.stabs	"uint_fast8_t:t(5,20)=(5,2)",128,0,222,0
  87               		.stabs	"int_fast16_t:t(5,21)=(5,3)",128,0,227,0
  88               		.stabs	"uint_fast16_t:t(5,22)=(5,4)",128,0,232,0
  89               		.stabs	"int_fast32_t:t(5,23)=(5,5)",128,0,237,0
  90               		.stabs	"uint_fast32_t:t(5,24)=(5,6)",128,0,242,0
  91               		.stabs	"int_fast64_t:t(5,25)=(5,7)",128,0,250,0
  92               		.stabs	"uint_fast64_t:t(5,26)=(5,8)",128,0,257,0
  93               		.stabs	"intmax_t:t(5,27)=(5,7)",128,0,277,0
  94               		.stabs	"uintmax_t:t(5,28)=(5,8)",128,0,282,0
  95               		.stabn	162,0,0,0
  96               		.stabn	162,0,0,0
  97               		.stabs	"int_farptr_t:t(3,1)=(5,5)",128,0,77,0
  98               		.stabs	"uint_farptr_t:t(3,2)=(5,6)",128,0,81,0
  99               		.stabn	162,0,0,0
 100               		.stabn	162,0,0,0
 101               		.stabs	"/usr/lib/avr/include/avr/fuse.h",130,0,0,0
 102               		.stabs	"__fuse_t:t(6,1)=(6,2)=s3low:(0,13),0,8;high:(0,13),8,8;extended:(0,13),16,8;;",128,0,244,0
 103               		.stabn	162,0,0,0
 104               		.stabn	162,0,0,0
 105               		.stabs	"__vector_18:F(0,50)",36,0,34,__vector_18
 106               	.global	__vector_18
 107               		.type	__vector_18, @function
 108               	__vector_18:
 109               		.stabd	46,0,0
   1:main.c        **** /* Necessário para funções e macros básicas */
   2:main.c        **** #include <avr/io.h>
   3:main.c        **** 
   4:main.c        **** /* Os próximos dois includes são necessários quando se usa interrupçoes */
   5:main.c        **** #include <avr/cpufunc.h>
GAS LISTING /tmp/ccA5ofNs.s 			page 3


   6:main.c        **** #include <avr/interrupt.h>
   7:main.c        **** 
   8:main.c        **** #include <stdint.h>
   9:main.c        **** 
  10:main.c        **** #define FOSC 16000000ul
  11:main.c        **** #define BAUD 57600
  12:main.c        **** #define MYUBRR (FOSC/(8ul*BAUD) - 1)
  13:main.c        **** 
  14:main.c        **** /* Caracteres especiais */
  15:main.c        **** #define SINC 0x7e
  16:main.c        **** #define XON 0x11
  17:main.c        **** #define XOFF 0x13
  18:main.c        **** #define ESC 0x7d
  19:main.c        **** 
  20:main.c        **** /* Protótipos das funções */
  21:main.c        **** uint8_t write(uint8_t* buf, uint8_t n, int8_t close_packet);
  22:main.c        **** uint8_t read(uint8_t* buf, uint8_t n);
  23:main.c        **** uint8_t USART_Receive(void);
  24:main.c        **** void USART_Transmit(uint8_t data);
  25:main.c        **** void flow_off(void);
  26:main.c        **** void flow_on(void);
  27:main.c        **** void delay_ms(uint16_t ms);
  28:main.c        **** 
  29:main.c        **** 
  30:main.c        **** /* Variáveis globais */
  31:main.c        **** uint8_t rx_byte_cnt, tx_byte_cnt;
  32:main.c        **** uint8_t rx_state, rx_sinc, tx_state=1;
  33:main.c        **** 
  34:main.c        **** ISR(USART_RX_vect) {
 110               		.stabn	68,0,34,.LM0-.LFBB1
 111               	.LM0:
 112               	.LFBB1:
 113 0000 1F92      		push r1
 114 0002 0F92      		push r0
 115 0004 0FB6      		in r0,__SREG__
 116 0006 0F92      		push r0
 117 0008 1124      		clr __zero_reg__
 118 000a 8F93      		push r24
 119               	/* prologue: Signal */
 120               	/* frame size = 0 */
 121               	/* stack size = 4 */
 122               	.L__stack_usage = 4
  35:main.c        ****    uint8_t received_byte = UDR0;
 123               		.stabn	68,0,35,.LM1-.LFBB1
 124               	.LM1:
 125 000c 8091 C600 		lds r24,198
  36:main.c        ****     if (received_byte == XOFF) {
 126               		.stabn	68,0,36,.LM2-.LFBB1
 127               	.LM2:
 128 0010 8331      		cpi r24,lo8(19)
 129 0012 01F4      		brne .L2
  37:main.c        ****         tx_state = 0;
 130               		.stabn	68,0,37,.LM3-.LFBB1
 131               	.LM3:
 132 0014 1092 0000 		sts tx_state,__zero_reg__
 133               	.L1:
 134               	/* epilogue start */
GAS LISTING /tmp/ccA5ofNs.s 			page 4


  38:main.c        ****     } else if (received_byte == XON) {
  39:main.c        ****         tx_state = 1;
  40:main.c        ****     }
  41:main.c        **** }
 135               		.stabn	68,0,41,.LM4-.LFBB1
 136               	.LM4:
 137 0018 8F91      		pop r24
 138 001a 0F90      		pop r0
 139 001c 0FBE      		out __SREG__,r0
 140 001e 0F90      		pop r0
 141 0020 1F90      		pop r1
 142 0022 1895      		reti
 143               	.L2:
  38:main.c        ****     } else if (received_byte == XON) {
 144               		.stabn	68,0,38,.LM5-.LFBB1
 145               	.LM5:
 146 0024 8131      		cpi r24,lo8(17)
 147 0026 01F4      		brne .L1
  39:main.c        ****     }
 148               		.stabn	68,0,39,.LM6-.LFBB1
 149               	.LM6:
 150 0028 81E0      		ldi r24,lo8(1)
 151 002a 8093 0000 		sts tx_state,r24
 152               		.stabn	68,0,41,.LM7-.LFBB1
 153               	.LM7:
 154 002e 00C0      		rjmp .L1
 155               		.size	__vector_18, .-__vector_18
 156               		.stabs	"received_byte:r(5,2)",64,0,35,24
 157               		.stabn	192,0,0,.LFBB1-.LFBB1
 158               		.stabn	224,0,0,.Lscope1-.LFBB1
 159               	.Lscope1:
 160               		.stabs	"",36,0,0,.Lscope1-.LFBB1
 161               		.stabd	78,0,0
 162               		.stabs	"__vector_19:F(0,50)",36,0,43,__vector_19
 163               	.global	__vector_19
 164               		.type	__vector_19, @function
 165               	__vector_19:
 166               		.stabd	46,0,0
  42:main.c        **** 
  43:main.c        **** ISR(USART_UDRE_vect) {
 167               		.stabn	68,0,43,.LM8-.LFBB2
 168               	.LM8:
 169               	.LFBB2:
 170 0030 1F92      		push r1
 171 0032 0F92      		push r0
 172 0034 0FB6      		in r0,__SREG__
 173 0036 0F92      		push r0
 174 0038 1124      		clr __zero_reg__
 175               	/* prologue: Signal */
 176               	/* frame size = 0 */
 177               	/* stack size = 3 */
 178               	.L__stack_usage = 3
 179               	/* epilogue start */
  44:main.c        **** }
 180               		.stabn	68,0,44,.LM9-.LFBB2
 181               	.LM9:
 182 003a 0F90      		pop r0
GAS LISTING /tmp/ccA5ofNs.s 			page 5


 183 003c 0FBE      		out __SREG__,r0
 184 003e 0F90      		pop r0
 185 0040 1F90      		pop r1
 186 0042 1895      		reti
 187               		.size	__vector_19, .-__vector_19
 188               	.Lscope2:
 189               		.stabs	"",36,0,0,.Lscope2-.LFBB2
 190               		.stabd	78,0,0
 191               		.stabs	"read:F(5,2)",36,0,93,read
 192               		.stabs	"buf:P(0,51)=*(5,2)",64,0,93,24
 193               		.stabs	"n:P(5,2)",64,0,93,22
 194               	.global	read
 195               		.type	read, @function
 196               	read:
 197               		.stabd	46,0,0
  45:main.c        **** 
  46:main.c        **** int main(void) {
  47:main.c        ****     /* Faça a configuração do que for necessário aqui */
  48:main.c        ****     /* Seu código aqui */
  49:main.c        ****     UCSR0A = (1 << U2X0); /* double speed */
  50:main.c        ****     UCSR0B = (1<<RXEN0) | (1 << TXEN0) | (1 << RXCIE0); /* Enable rx and tx, rx complete interrupt,
  51:main.c        ****     UCSR0C = (1<<UCSZ01) | (1<<UCSZ00); /* Set frame format: 8N1 */
  52:main.c        ****     UBRR0H = (MYUBRR>>8); /* Set baud rate */
  53:main.c        ****     UBRR0L = MYUBRR; /* Set baud rate */
  54:main.c        **** 
  55:main.c        ****     DDRB |= (1 << PB5); // Configura PB5 como saída (LED)
  56:main.c        ****     PORTB &= ~(1 << PB5); // Garante que o LED está apagado no início   
  57:main.c        **** 
  58:main.c        ****     sei();
  59:main.c        **** 
  60:main.c        ****     /* Implemente os testes aqui. Veja o texto para os detalhes */
  61:main.c        ****     uint8_t str_test[] = "Universidade Federal de Pernambuco\nDepartamento de Eletrônica e Sistema
  62:main.c        **** 
  63:main.c        ****     /* Loop infinito necessário em qualquer programa para
  64:main.c        ****        embarcados */
  65:main.c        ****     while (1) {
  66:main.c        ****         write(str_test, sizeof(str_test)-1, 1);
  67:main.c        ****         delay_ms(1000);
  68:main.c        ****     }
  69:main.c        **** 
  70:main.c        ****     return 0;
  71:main.c        **** }
  72:main.c        **** 
  73:main.c        **** 
  74:main.c        **** uint8_t write(uint8_t* buf, uint8_t n, int8_t close_packet){
  75:main.c        ****     tx_byte_cnt = 0;
  76:main.c        **** 
  77:main.c        ****     if (!tx_state) {
  78:main.c        ****         return 0;
  79:main.c        ****     }
  80:main.c        ****     
  81:main.c        ****     while ((tx_byte_cnt < n) && tx_state) {
  82:main.c        ****         USART_Transmit(buf[tx_byte_cnt]);
  83:main.c        ****         tx_byte_cnt++;
  84:main.c        ****     }
  85:main.c        **** 
  86:main.c        ****     if (close_packet && tx_state) {
GAS LISTING /tmp/ccA5ofNs.s 			page 6


  87:main.c        ****         USART_Transmit(SINC);
  88:main.c        ****     }
  89:main.c        **** 
  90:main.c        ****     return tx_byte_cnt;
  91:main.c        **** }
  92:main.c        **** 
  93:main.c        **** uint8_t read(uint8_t* buf, uint8_t n) {
 198               		.stabn	68,0,93,.LM10-.LFBB3
 199               	.LM10:
 200               	.LFBB3:
 201               	/* prologue: function */
 202               	/* frame size = 0 */
 203               	/* stack size = 0 */
 204               	.L__stack_usage = 0
 205               	/* epilogue start */
  94:main.c        **** }
 206               		.stabn	68,0,94,.LM11-.LFBB3
 207               	.LM11:
 208 0044 0895      		ret
 209               		.size	read, .-read
 210               	.Lscope3:
 211               		.stabs	"",36,0,0,.Lscope3-.LFBB3
 212               		.stabd	78,0,0
 213               		.stabs	"USART_Receive:F(5,2)",36,0,96,USART_Receive
 214               	.global	USART_Receive
 215               		.type	USART_Receive, @function
 216               	USART_Receive:
 217               		.stabd	46,0,0
  95:main.c        **** 
  96:main.c        **** uint8_t USART_Receive(void)
  97:main.c        **** {
 218               		.stabn	68,0,97,.LM12-.LFBB4
 219               	.LM12:
 220               	.LFBB4:
 221               	/* prologue: function */
 222               	/* frame size = 0 */
 223               	/* stack size = 0 */
 224               	.L__stack_usage = 0
 225               	.L7:
  98:main.c        ****     /* Wait for data to be received */
  99:main.c        ****     while (!(UCSR0A & (1<<RXC0)))
 226               		.stabn	68,0,99,.LM13-.LFBB4
 227               	.LM13:
 228 0046 8091 C000 		lds r24,192
 229 004a 87FF      		sbrs r24,7
 230 004c 00C0      		rjmp .L7
 100:main.c        ****     ;
 101:main.c        ****     /* Get and return received data from buffer */
 102:main.c        ****     return UDR0;
 231               		.stabn	68,0,102,.LM14-.LFBB4
 232               	.LM14:
 233 004e 8091 C600 		lds r24,198
 234               	/* epilogue start */
 103:main.c        **** }
 235               		.stabn	68,0,103,.LM15-.LFBB4
 236               	.LM15:
 237 0052 0895      		ret
GAS LISTING /tmp/ccA5ofNs.s 			page 7


 238               		.size	USART_Receive, .-USART_Receive
 239               	.Lscope4:
 240               		.stabs	"",36,0,0,.Lscope4-.LFBB4
 241               		.stabd	78,0,0
 242               		.stabs	"USART_Transmit:F(0,50)",36,0,105,USART_Transmit
 243               		.stabs	"data:P(5,2)",64,0,105,24
 244               	.global	USART_Transmit
 245               		.type	USART_Transmit, @function
 246               	USART_Transmit:
 247               		.stabd	46,0,0
 104:main.c        **** 
 105:main.c        **** void USART_Transmit(uint8_t data)
 106:main.c        **** {
 248               		.stabn	68,0,106,.LM16-.LFBB5
 249               	.LM16:
 250               	.LFBB5:
 251               	/* prologue: function */
 252               	/* frame size = 0 */
 253               	/* stack size = 0 */
 254               	.L__stack_usage = 0
 255               	.L10:
 107:main.c        ****     /* Wait for empty transmit buffer */
 108:main.c        ****     while (!(UCSR0A & (1<<UDRE0)));
 256               		.stabn	68,0,108,.LM17-.LFBB5
 257               	.LM17:
 258 0054 9091 C000 		lds r25,192
 259 0058 95FF      		sbrs r25,5
 260 005a 00C0      		rjmp .L10
 109:main.c        ****     /* Put data into buffer, sends the data */
 110:main.c        ****     UDR0 = data;
 261               		.stabn	68,0,110,.LM18-.LFBB5
 262               	.LM18:
 263 005c 8093 C600 		sts 198,r24
 264               	/* epilogue start */
 111:main.c        **** }
 265               		.stabn	68,0,111,.LM19-.LFBB5
 266               	.LM19:
 267 0060 0895      		ret
 268               		.size	USART_Transmit, .-USART_Transmit
 269               	.Lscope5:
 270               		.stabs	"",36,0,0,.Lscope5-.LFBB5
 271               		.stabd	78,0,0
 272               		.stabs	"write:F(5,2)",36,0,74,write
 273               		.stabs	"buf:P(0,51)",64,0,74,16
 274               		.stabs	"n:P(5,2)",64,0,74,29
 275               		.stabs	"close_packet:P(5,1)",64,0,74,28
 276               	.global	write
 277               		.type	write, @function
 278               	write:
 279               		.stabd	46,0,0
  74:main.c        ****     tx_byte_cnt = 0;
 280               		.stabn	68,0,74,.LM20-.LFBB6
 281               	.LM20:
 282               	.LFBB6:
 283 0062 0F93      		push r16
 284 0064 1F93      		push r17
 285 0066 CF93      		push r28
GAS LISTING /tmp/ccA5ofNs.s 			page 8


 286 0068 DF93      		push r29
 287               	/* prologue: function */
 288               	/* frame size = 0 */
 289               	/* stack size = 4 */
 290               	.L__stack_usage = 4
 291 006a 8C01      		movw r16,r24
 292 006c D62F      		mov r29,r22
 293 006e C42F      		mov r28,r20
  75:main.c        **** 
 294               		.stabn	68,0,75,.LM21-.LFBB6
 295               	.LM21:
 296 0070 1092 0000 		sts tx_byte_cnt,__zero_reg__
  77:main.c        ****         return 0;
 297               		.stabn	68,0,77,.LM22-.LFBB6
 298               	.LM22:
 299 0074 8091 0000 		lds r24,tx_state
 300 0078 8111      		cpse r24,__zero_reg__
 301 007a 00C0      		rjmp .L15
 302               	.L13:
 303               	/* epilogue start */
  91:main.c        **** 
 304               		.stabn	68,0,91,.LM23-.LFBB6
 305               	.LM23:
 306 007c DF91      		pop r29
 307 007e CF91      		pop r28
 308 0080 1F91      		pop r17
 309 0082 0F91      		pop r16
 310 0084 0895      		ret
 311               	.L17:
 312               	.LBB4:
 313               	.LBB5:
  82:main.c        ****         tx_byte_cnt++;
 314               		.stabn	68,0,82,.LM24-.LFBB6
 315               	.LM24:
 316 0086 E00F      		add r30,r16
 317 0088 F12F      		mov r31,r17
 318 008a F11D      		adc r31,__zero_reg__
 319 008c 8081      		ld r24,Z
 320 008e 0E94 0000 		call USART_Transmit
  83:main.c        ****     }
 321               		.stabn	68,0,83,.LM25-.LFBB6
 322               	.LM25:
 323 0092 8091 0000 		lds r24,tx_byte_cnt
 324 0096 8F5F      		subi r24,lo8(-(1))
 325 0098 8093 0000 		sts tx_byte_cnt,r24
 326               	.L15:
  81:main.c        ****         USART_Transmit(buf[tx_byte_cnt]);
 327               		.stabn	68,0,81,.LM26-.LFBB6
 328               	.LM26:
 329 009c E091 0000 		lds r30,tx_byte_cnt
 330 00a0 ED17      		cp r30,r29
 331 00a2 00F4      		brsh .L16
 332 00a4 8091 0000 		lds r24,tx_state
 333 00a8 8111      		cpse r24,__zero_reg__
 334 00aa 00C0      		rjmp .L17
 335               	.L18:
  90:main.c        **** }
GAS LISTING /tmp/ccA5ofNs.s 			page 9


 336               		.stabn	68,0,90,.LM27-.LFBB6
 337               	.LM27:
 338 00ac 8091 0000 		lds r24,tx_byte_cnt
 339 00b0 00C0      		rjmp .L13
 340               	.L16:
  86:main.c        ****         USART_Transmit(SINC);
 341               		.stabn	68,0,86,.LM28-.LFBB6
 342               	.LM28:
 343 00b2 CC23      		tst r28
 344 00b4 01F0      		breq .L18
 345 00b6 8091 0000 		lds r24,tx_state
 346 00ba 8823      		tst r24
 347 00bc 01F0      		breq .L18
  87:main.c        ****     }
 348               		.stabn	68,0,87,.LM29-.LFBB6
 349               	.LM29:
 350 00be 8EE7      		ldi r24,lo8(126)
 351 00c0 0E94 0000 		call USART_Transmit
 352 00c4 00C0      		rjmp .L18
 353               	.LBE5:
 354               	.LBE4:
 355               		.size	write, .-write
 356               	.Lscope6:
 357               		.stabs	"",36,0,0,.Lscope6-.LFBB6
 358               		.stabd	78,0,0
 359               		.stabs	"flow_off:F(0,50)",36,0,113,flow_off
 360               	.global	flow_off
 361               		.type	flow_off, @function
 362               	flow_off:
 363               		.stabd	46,0,0
 112:main.c        **** 
 113:main.c        **** void flow_off(void) {
 364               		.stabn	68,0,113,.LM30-.LFBB7
 365               	.LM30:
 366               	.LFBB7:
 367               	/* prologue: function */
 368               	/* frame size = 0 */
 369               	/* stack size = 0 */
 370               	.L__stack_usage = 0
 114:main.c        ****     USART_Transmit(XOFF);
 371               		.stabn	68,0,114,.LM31-.LFBB7
 372               	.LM31:
 373 00c6 83E1      		ldi r24,lo8(19)
 374 00c8 0C94 0000 		jmp USART_Transmit
 375               		.size	flow_off, .-flow_off
 376               	.Lscope7:
 377               		.stabs	"",36,0,0,.Lscope7-.LFBB7
 378               		.stabd	78,0,0
 379               		.stabs	"flow_on:F(0,50)",36,0,117,flow_on
 380               	.global	flow_on
 381               		.type	flow_on, @function
 382               	flow_on:
 383               		.stabd	46,0,0
 115:main.c        **** }
 116:main.c        **** 
 117:main.c        **** void flow_on(void) {
 384               		.stabn	68,0,117,.LM32-.LFBB8
GAS LISTING /tmp/ccA5ofNs.s 			page 10


 385               	.LM32:
 386               	.LFBB8:
 387               	/* prologue: function */
 388               	/* frame size = 0 */
 389               	/* stack size = 0 */
 390               	.L__stack_usage = 0
 118:main.c        ****     USART_Transmit(XON);
 391               		.stabn	68,0,118,.LM33-.LFBB8
 392               	.LM33:
 393 00cc 81E1      		ldi r24,lo8(17)
 394 00ce 0C94 0000 		jmp USART_Transmit
 395               		.size	flow_on, .-flow_on
 396               	.Lscope8:
 397               		.stabs	"",36,0,0,.Lscope8-.LFBB8
 398               		.stabd	78,0,0
 399               		.stabs	"delay_ms:F(0,50)",36,0,121,delay_ms
 400               		.stabs	"ms:P(5,4)",64,0,121,24
 401               	.global	delay_ms
 402               		.type	delay_ms, @function
 403               	delay_ms:
 404               		.stabd	46,0,0
 119:main.c        **** }
 120:main.c        **** 
 121:main.c        **** void delay_ms(uint16_t ms)
 122:main.c        **** {
 405               		.stabn	68,0,122,.LM34-.LFBB9
 406               	.LM34:
 407               	.LFBB9:
 408               	/* prologue: function */
 409               	/* frame size = 0 */
 410               	/* stack size = 0 */
 411               	.L__stack_usage = 0
 123:main.c        ****     uint16_t i, j;
 124:main.c        ****     for(i=0; i<ms; i++)
 412               		.stabn	68,0,124,.LM35-.LFBB9
 413               	.LM35:
 414 00d2 30E0      		ldi r19,0
 415 00d4 20E0      		ldi r18,0
 416               	.L31:
 417               		.stabn	68,0,124,.LM36-.LFBB9
 418               	.LM36:
 419 00d6 2817      		cp r18,r24
 420 00d8 3907      		cpc r19,r25
 421 00da 01F4      		brne .L33
 422               	/* epilogue start */
 125:main.c        ****         for(j=0; j<4000; j++)
 126:main.c        ****             _NOP();
 127:main.c        **** }...
 423               		.stabn	68,0,127,.LM37-.LFBB9
 424               	.LM37:
 425 00dc 0895      		ret
 426               	.L33:
 427 00de 40EA      		ldi r20,lo8(-96)
 428 00e0 5FE0      		ldi r21,lo8(15)
 429               	.L32:
 126:main.c        ****             _NOP();
 430               		.stabn	68,0,126,.LM38-.LFBB9
GAS LISTING /tmp/ccA5ofNs.s 			page 11


 431               	.LM38:
 432               	/* #APP */
 433               	 ;  126 "main.c" 1
 434 00e2 0000      		nop
 435               	 ;  0 "" 2
 436               	/* #NOAPP */
 437 00e4 4150      		subi r20,1
 438 00e6 5109      		sbc r21,__zero_reg__
 125:main.c        ****         for(j=0; j<4000; j++)
 439               		.stabn	68,0,125,.LM39-.LFBB9
 440               	.LM39:
 441 00e8 01F4      		brne .L32
 124:main.c        ****     for(i=0; i<ms; i++)
 442               		.stabn	68,0,124,.LM40-.LFBB9
 443               	.LM40:
 444 00ea 2F5F      		subi r18,-1
 445 00ec 3F4F      		sbci r19,-1
 446 00ee 00C0      		rjmp .L31
 447               		.size	delay_ms, .-delay_ms
 448               		.stabs	"i:r(5,4)",64,0,123,18
 449               		.stabn	192,0,0,.LFBB9-.LFBB9
 450               		.stabn	224,0,0,.Lscope9-.LFBB9
 451               	.Lscope9:
 452               		.stabs	"",36,0,0,.Lscope9-.LFBB9
 453               		.stabd	78,0,0
 454               		.section	.rodata.str1.1,"aMS",@progbits,1
 455               	.LC0:
 456 0000 556E 6976 		.string	"Universidade Federal de Pernambuco\nDepartamento de Eletr\303\264nica e Sistemas"
 456      6572 7369 
 456      6461 6465 
 456      2046 6564 
 456      6572 616C 
 457               		.section	.text.startup,"ax",@progbits
 458               		.stabs	"main:F(0,1)",36,0,46,main
 459               	.global	main
 460               		.type	main, @function
 461               	main:
 462               		.stabd	46,0,0
  46:main.c        **** int main(void) {
 463               		.stabn	68,0,46,.LM41-.LFBB10
 464               	.LM41:
 465               	.LFBB10:
 466 0000 CF93      		push r28
 467 0002 DF93      		push r29
 468 0004 CDB7      		in r28,__SP_L__
 469 0006 DEB7      		in r29,__SP_H__
 470 0008 CA54      		subi r28,74
 471 000a D109      		sbc r29,__zero_reg__
 472 000c 0FB6      		in __tmp_reg__,__SREG__
 473 000e F894      		cli
 474 0010 DEBF      		out __SP_H__,r29
 475 0012 0FBE      		out __SREG__,__tmp_reg__
 476 0014 CDBF      		out __SP_L__,r28
 477               	/* prologue: function */
 478               	/* frame size = 74 */
 479               	/* stack size = 76 */
 480               	.L__stack_usage = 76
GAS LISTING /tmp/ccA5ofNs.s 			page 12


  49:main.c        ****     UCSR0A = (1 << U2X0); /* double speed */
 481               		.stabn	68,0,49,.LM42-.LFBB10
 482               	.LM42:
 483 0016 82E0      		ldi r24,lo8(2)
 484 0018 8093 C000 		sts 192,r24
  50:main.c        ****     UCSR0B = (1<<RXEN0) | (1 << TXEN0) | (1 << RXCIE0); /* Enable rx and tx, rx complete interrupt,
 485               		.stabn	68,0,50,.LM43-.LFBB10
 486               	.LM43:
 487 001c 88E9      		ldi r24,lo8(-104)
 488 001e 8093 C100 		sts 193,r24
  51:main.c        ****     UCSR0C = (1<<UCSZ01) | (1<<UCSZ00); /* Set frame format: 8N1 */
 489               		.stabn	68,0,51,.LM44-.LFBB10
 490               	.LM44:
 491 0022 86E0      		ldi r24,lo8(6)
 492 0024 8093 C200 		sts 194,r24
  52:main.c        ****     UBRR0H = (MYUBRR>>8); /* Set baud rate */
 493               		.stabn	68,0,52,.LM45-.LFBB10
 494               	.LM45:
 495 0028 1092 C500 		sts 197,__zero_reg__
  53:main.c        ****     UBRR0L = MYUBRR; /* Set baud rate */
 496               		.stabn	68,0,53,.LM46-.LFBB10
 497               	.LM46:
 498 002c 81E2      		ldi r24,lo8(33)
 499 002e 8093 C400 		sts 196,r24
  55:main.c        ****     DDRB |= (1 << PB5); // Configura PB5 como saída (LED)
 500               		.stabn	68,0,55,.LM47-.LFBB10
 501               	.LM47:
 502 0032 259A      		sbi 0x4,5
  56:main.c        ****     PORTB &= ~(1 << PB5); // Garante que o LED está apagado no início   
 503               		.stabn	68,0,56,.LM48-.LFBB10
 504               	.LM48:
 505 0034 2D98      		cbi 0x5,5
  58:main.c        ****     sei();
 506               		.stabn	68,0,58,.LM49-.LFBB10
 507               	.LM49:
 508               	/* #APP */
 509               	 ;  58 "main.c" 1
 510 0036 7894      		sei
 511               	 ;  0 "" 2
  61:main.c        ****     uint8_t str_test[] = "Universidade Federal de Pernambuco\nDepartamento de Eletrônica e Sistema
 512               		.stabn	68,0,61,.LM50-.LFBB10
 513               	.LM50:
 514               	/* #NOAPP */
 515 0038 8AE4      		ldi r24,lo8(74)
 516 003a E0E0      		ldi r30,lo8(.LC0)
 517 003c F0E0      		ldi r31,hi8(.LC0)
 518 003e DE01      		movw r26,r28
 519 0040 1196      		adiw r26,1
 520               		0:
 521 0042 0190      		ld r0,Z+
 522 0044 0D92      		st X+,r0
 523 0046 8A95      		dec r24
 524 0048 01F4      		brne 0b
 525               	.L36:
  66:main.c        ****         write(str_test, sizeof(str_test)-1, 1);
 526               		.stabn	68,0,66,.LM51-.LFBB10
 527               	.LM51:
GAS LISTING /tmp/ccA5ofNs.s 			page 13


 528 004a 41E0      		ldi r20,lo8(1)
 529 004c 69E4      		ldi r22,lo8(73)
 530 004e CE01      		movw r24,r28
 531 0050 0196      		adiw r24,1
 532 0052 0E94 0000 		call write
  67:main.c        ****         delay_ms(1000);
 533               		.stabn	68,0,67,.LM52-.LFBB10
 534               	.LM52:
 535 0056 88EE      		ldi r24,lo8(-24)
 536 0058 93E0      		ldi r25,lo8(3)
 537 005a 0E94 0000 		call delay_ms
 538 005e 00C0      		rjmp .L36
 539               		.size	main, .-main
 540               		.stabs	"str_test:(0,52)=ar(0,53)=r(0,53);0;0177777;;0;73;(5,2)",128,0,61,1
 541               		.stabn	192,0,0,.LFBB10-.LFBB10
 542               		.stabn	224,0,0,.Lscope10-.LFBB10
 543               	.Lscope10:
 544               		.stabs	"",36,0,0,.Lscope10-.LFBB10
 545               		.stabd	78,0,0
 546               	.global	tx_state
 547               		.data
 548               		.type	tx_state, @object
 549               		.size	tx_state, 1
 550               	tx_state:
 551 0000 01        		.byte	1
 552               		.stabs	"tx_state:G(5,2)",32,0,32,0
 553               		.comm	rx_sinc,1,1
 554               		.stabs	"rx_sinc:G(5,2)",32,0,32,0
 555               		.comm	rx_state,1,1
 556               		.stabs	"rx_state:G(5,2)",32,0,32,0
 557               		.comm	tx_byte_cnt,1,1
 558               		.stabs	"tx_byte_cnt:G(5,2)",32,0,31,0
 559               		.comm	rx_byte_cnt,1,1
 560               		.stabs	"rx_byte_cnt:G(5,2)",32,0,31,0
 561               		.text
 562               		.stabs	"",100,0,0,.Letext0
 563               	.Letext0:
 564               		.ident	"GCC: (GNU) 7.3.0"
 565               	.global __do_copy_data
 566               	.global __do_clear_bss
GAS LISTING /tmp/ccA5ofNs.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccA5ofNs.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccA5ofNs.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccA5ofNs.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccA5ofNs.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccA5ofNs.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccA5ofNs.s:108    .text:0000000000000000 __vector_18
     /tmp/ccA5ofNs.s:550    .data:0000000000000000 tx_state
     /tmp/ccA5ofNs.s:165    .text:0000000000000030 __vector_19
     /tmp/ccA5ofNs.s:196    .text:0000000000000044 read
     /tmp/ccA5ofNs.s:216    .text:0000000000000046 USART_Receive
     /tmp/ccA5ofNs.s:246    .text:0000000000000054 USART_Transmit
     /tmp/ccA5ofNs.s:278    .text:0000000000000062 write
                            *COM*:0000000000000001 tx_byte_cnt
     /tmp/ccA5ofNs.s:362    .text:00000000000000c6 flow_off
     /tmp/ccA5ofNs.s:382    .text:00000000000000cc flow_on
     /tmp/ccA5ofNs.s:403    .text:00000000000000d2 delay_ms
     /tmp/ccA5ofNs.s:461    .text.startup:0000000000000000 main
                            *COM*:0000000000000001 rx_sinc
                            *COM*:0000000000000001 rx_state
                            *COM*:0000000000000001 rx_byte_cnt

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
