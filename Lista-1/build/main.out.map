Membro de arquivo incluído para satisfazer referência por arquivo (símbolo)

/usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/crtatmega328p.o (exit)
/usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_copy_data.o)
                              ./build/main.o (__do_copy_data)
/usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_clear_bss.o)
                              ./build/main.o (__do_clear_bss)
/usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(memcmp.o)
                              ./build/main.o (memcmp)

Alocação de símbolos comuns
Símbolo comum       tamanho           arquivo

rx_tail             0x1               ./build/main.o
usart_transmitting  0x1               ./build/main.o
tx_byte_cnt         0x1               ./build/main.o
tx_head             0x1               ./build/main.o
rx_buffer           0xff              ./build/main.o
tx_buffer           0xff              ./build/main.o
rx_byte_cnt         0x1               ./build/main.o
tx_tail             0x1               ./build/main.o
rx_esc              0x1               ./build/main.o
rx_head             0x1               ./build/main.o
rx_sinc             0x1               ./build/main.o

Configuração de memória

Nome             Origem             Tamanho            Atributos
text             0x0000000000000000 0x0000000000008000 xr
data             0x0000000000800100 0x0000000000000800 rw !x
eeprom           0x0000000000810000 0x0000000000000400 rw !x
fuse             0x0000000000820000 0x0000000000000003 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Mapa de memória e script de vinculador

Endereço de seção .data definido para 0x800100
LOAD /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/crtatmega328p.o
LOAD ./build/main.o
START GROUP
LOAD /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libatmega328p.a
END GROUP
                0x0000000000000000                __TEXT_REGION_ORIGIN__ = DEFINED (__TEXT_REGION_ORIGIN__)?__TEXT_REGION_ORIGIN__:0x0
                [0x0000000000800100]                __DATA_REGION_ORIGIN__ = DEFINED (__DATA_REGION_ORIGIN__)?__DATA_REGION_ORIGIN__:0x800060
                [0x0000000000008000]                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x20000
                [0x0000000000000800]                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                [0x0000000000000400]                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                [0x0000000000000003]                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x634
 *(.vectors)
 .vectors       0x0000000000000000       0x68 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/crtatmega328p.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000068                . = ALIGN (0x2)
                0x0000000000000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000068        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000068                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem*)
                0x0000000000000068                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000068                __ctors_start = .
 *(.ctors)
                0x0000000000000068                __ctors_end = .
                0x0000000000000068                __dtors_start = .
 *(.dtors)
                0x0000000000000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000068        0x0 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/crtatmega328p.o
                0x0000000000000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000068        0xc /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/crtatmega328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000074       0x16 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_copy_data.o)
                0x0000000000000074                __do_copy_data
 .init4         0x000000000000008a       0x10 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_clear_bss.o)
                0x000000000000008a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000009a        0x8 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/crtatmega328p.o
 *(.init9)
 *(.text)
 .text          0x00000000000000a2        0x4 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/crtatmega328p.o
                0x00000000000000a2                __vector_22
                0x00000000000000a2                __vector_1
                0x00000000000000a2                __vector_24
                0x00000000000000a2                __vector_12
                0x00000000000000a2                __bad_interrupt
                0x00000000000000a2                __vector_6
                0x00000000000000a2                __vector_3
                0x00000000000000a2                __vector_23
                0x00000000000000a2                __vector_25
                0x00000000000000a2                __vector_11
                0x00000000000000a2                __vector_13
                0x00000000000000a2                __vector_17
                0x00000000000000a2                __vector_7
                0x00000000000000a2                __vector_5
                0x00000000000000a2                __vector_4
                0x00000000000000a2                __vector_9
                0x00000000000000a2                __vector_2
                0x00000000000000a2                __vector_21
                0x00000000000000a2                __vector_15
                0x00000000000000a2                __vector_8
                0x00000000000000a2                __vector_14
                0x00000000000000a2                __vector_10
                0x00000000000000a2                __vector_16
                0x00000000000000a2                __vector_20
 .text          0x00000000000000a6      0x31c ./build/main.o
                0x00000000000000a6                __vector_19
                0x0000000000000102                read_rx_buffer
                0x0000000000000138                read
                0x0000000000000190                write_tx_buffer
                0x00000000000001de                write
                0x0000000000000262                enqueue_rx_buffer
                0x000000000000029c                __vector_18
                0x000000000000032c                flow_off
                0x0000000000000338                flow_on
                0x0000000000000346                is_flow_on
                0x000000000000034c                delay_ms
                0x000000000000036a                blink_led
                0x0000000000000388                turn_led_on
                0x0000000000000396                received_data
 .text          0x00000000000003c2        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_exit.o)
 .text          0x00000000000003c2        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_copy_data.o)
 .text          0x00000000000003c2        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_clear_bss.o)
 .text          0x00000000000003c2        0x0 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(memcmp.o)
                0x00000000000003c2                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x00000000000003c2      0x254 ./build/main.o
                0x00000000000003c2                main
 .text.libgcc.mul
                0x0000000000000616        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000616        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000616        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000616        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000616        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000616        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000616        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000616        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000616        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000616        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000616        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000616        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000616        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000616        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000616        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000616        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000616        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000616        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000616        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000616        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000616        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x0000000000000616       0x1a /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(memcmp.o)
                0x0000000000000616                memcmp
                0x0000000000000630                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000630        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_exit.o)
                0x0000000000000630                exit
                0x0000000000000630                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000630        0x4 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000634                _etext = .

.data           0x0000000000800100       0x7e carga com endereço 0x0000000000000634
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/crtatmega328p.o
 .data          0x0000000000800100        0x2 ./build/main.o
                0x0000000000800100                tx_state
                0x0000000000800101                rx_state
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_clear_bss.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(memcmp.o)
 *(.data*)
 *(.gnu.linkonce.d*)
 *(.rodata)
 .rodata        0x0000000000800102        0xa ./build/main.o
 *(.rodata*)
 .rodata.str1.1
                0x000000000080010c       0x71 ./build/main.o
 *(.gnu.linkonce.r*)
                0x000000000080017e                . = ALIGN (0x2)
 *fill*         0x000000000080017d        0x1 
                0x000000000080017e                _edata = .
                0x000000000080017e                PROVIDE (__data_end, .)

.bss            0x000000000080017e      0x208
                0x000000000080017e                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x000000000080017e        0x0 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/crtatmega328p.o
 .bss           0x000000000080017e        0x1 ./build/main.o
                0x000000000080017e                rcvd_byte
 .bss           0x000000000080017f        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_exit.o)
 .bss           0x000000000080017f        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_copy_data.o)
 .bss           0x000000000080017f        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_clear_bss.o)
 .bss           0x000000000080017f        0x0 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(memcmp.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x000000000080017f      0x207 ./build/main.o
                0x000000000080017f                rx_tail
                0x0000000000800180                usart_transmitting
                0x0000000000800181                tx_byte_cnt
                0x0000000000800182                tx_head
                0x0000000000800183                rx_buffer
                0x0000000000800282                tx_buffer
                0x0000000000800381                rx_byte_cnt
                0x0000000000800382                tx_tail
                0x0000000000800383                rx_esc
                0x0000000000800384                rx_head
                0x0000000000800385                rx_sinc
                0x0000000000800386                PROVIDE (__bss_end, .)
                0x0000000000000634                __data_load_start = LOADADDR (.data)
                0x00000000000006b2                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800386        0x0
                [!provide]                        PROVIDE (__noinit_start, .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end, .)
                0x0000000000800386                _end = .
                [!provide]                        PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x1380
 *(.stab)
 .stab          0x0000000000000000     0x1380 ./build/main.o

.stabstr        0x0000000000000000     0x108f
 *(.stabstr)
 .stabstr       0x0000000000000000     0x108f ./build/main.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./build/main.o
                                         0x12 (tamanho antes de relaxar)

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x40
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x40 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/crtatmega328p.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x5f4
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x5f4 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/crtatmega328p.o

.debug_abbrev   0x0000000000000000      0x5a2
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x5a2 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/crtatmega328p.o

.debug_line     0x0000000000000000       0x1a
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1a /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/crtatmega328p.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x208
 *(.debug_str)
 .debug_str     0x0000000000000000      0x208 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/crtatmega328p.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(./build/main.out elf32-avr)
LOAD linker stubs
